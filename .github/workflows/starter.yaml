name: workflows starter
# env: is empty, see setup-env and the outputs there
on:
  push: {}
jobs:
  setup-env:
    runs-on: ubuntu-latest
    outputs: 
      image_tagged: laravel-realworld-example-app
      registry_root: ghcr.io/acdh-oeaw/
      default_port: "5000"
      source_image: tmp-cnb-image
      APP_NAME: laravel-realworld-example-app-github
# This together with the branch name is also used as the namespace to deploy to
      APP_ROOT: "/"
      SERVICE_ID: "99999"
      PUBLIC_URL: https://laravel-todo-example.acdh-cluster.arz.oeaw.ac.at
      POSTGRES_ENABLED: "true"
    steps:
      - run: "/bin/true"      
  _1:
    needs: [setup-env]
    uses: ./.github/workflows/build-cnb-and-push-to-registry.yaml    
    with:
      registry_root: ${{ needs.setup-env.outputs.registry_root }}
      image_tagged: ${{ needs.setup-env.outputs.image_tagged }}
      source_image: ${{ needs.setup-env.outputs.source_image }}
      default_port: ${{ needs.setup-env.outputs.default_port }}
  _2:
    needs: [setup-env]
# This is only for frameworks that really don't support DATABASE_URL. The next version of laravel for exmaple does.
    uses: ./.github/workflows/herokuish-tests-multi-var.yaml    
    with:
      registry_root: ${{ needs.setup-env.outputs.registry_root }}
      image_tagged: ${{ needs.setup-env.outputs.image_tagged }}
      source_image: ${{ needs.setup-env.outputs.source_image }}
      default_port: ${{ needs.setup-env.outputs.default_port }}
# Laravel realworld example app is an example of detection not working (only in herokuish)
# Warning: Multiple default buildpacks reported the ability to handle this app. The first buildpack in the list below will be used.
# nodejs, php     
      BUILDPACK_URL: https://github.com/heroku/heroku-buildpack-php
  _3:
    needs: [setup-env, _1, _2]
    uses: ./.github/workflows/deploy.yml
    secrets:
      ACDH_KUBE_CONFIG: ${{ secrets.ACDH_KUBE_CONFIG }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
    with:
      DOCKER_TAG: ${{ needs.setup-env.outputs.registry_root }}${{ needs.setup-env.outputs.image_tagged }}/${{ github.ref_name }}
      APP_NAME: ${{ needs.setup-env.outputs.APP_NAME }}
      APP_ROOT: ${{ needs.setup-env.outputs.APP_ROOT }}
      SERVICE_ID: ${{ needs.setup-env.outputs.SERVICE_ID }}
      PUBLIC_URL: ${{ needs.setup-env.outputs.PUBLIC_URL }}
      POSTGRES_ENABLED: ${{ needs.setup-env.outputs.POSTGRES_ENABLED == 'true'}}
